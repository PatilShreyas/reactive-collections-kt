name: Publish Library

on:
  workflow_dispatch:
    inputs:
      versionName:
        description: 'Version Name'
        required: true

permissions:
  contents: write

jobs:
  release:
    runs-on: macos-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Publish Library
        run: |
          echo "Publishing libraryðŸš€"
          ./gradlew publishToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_VERSION_NAME: ${{ github.event.inputs.versionName }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}

      - name: Create and push tag
        run: |
          git config --global user.email "shreyaspatilg@gmail.com"
          git config --global user.name "$GITHUB_ACTOR"

          git tag -a $TAG -m "Release $TAG"
          git push origin $TAG
        env:
          TAG: v${{ github.event.inputs.versionName }}

      - name: Create Release on GitHub
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.versionName }}
          release_name: v${{ github.event.inputs.versionName }}
          draft: true
          prerelease: false

      - name: Build documentation
        id: release
        run: ./gradlew dokkaHtml

      - name: Upload documentation
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./reactive-collections/build/dokka/html

  publish-docs:
    needs: release

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4